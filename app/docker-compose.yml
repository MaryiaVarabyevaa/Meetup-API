version: '3'

services:
  meetup:
    container_name: meetup
    build: ./meetup
    ports:
      - "5000:5000"
    depends_on:
      - meetup-db
      - rabbitmq
    env_file:
      - ./meetup/.production.env
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_QUEUE: queue-name
    networks:
      - mynetwork


  meetup-db:
    container_name: meetup-db
    image: postgres:latest
    restart: always
    env_file:
      - ./meetup/.production.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    ports:
      - 5433:5433
    networks:
      - mynetwork

  auth:
    container_name: auth
    build: ./auth
    ports:
      - "8080:8080"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      RABBITMQ_QUEUE: queue-name
    env_file:
      - ./auth/.production.env
    networks:
      - mynetwork
    depends_on:
      - auth-db
      - rabbitmq

  auth-db:
    container_name: auth-db
    image: postgres:latest
    restart: always
    env_file:
      - ./auth/.production.env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - mynetwork



volumes:
  postgres-db-data:

networks:
  mynetwork:
    driver: bridge
